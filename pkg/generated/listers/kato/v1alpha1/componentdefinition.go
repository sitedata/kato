// KATO, Application Management Platform
// Copyright (C) 2021 Gridworkz Co., Ltd.

// Permission is hereby granted, free of charge, to any person obtaining a copy of this 
// software and associated documentation files (the "Software"), to deal in the Software
// without restriction, including without limitation the rights to use, copy, modify, merge,
// publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons 
// to whom the Software is furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all copies or
// substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
// PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
// FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/gridworkz/kato/pkg/apis/kato/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ComponentDefinitionLister helps list ComponentDefinitions.
// All objects returned here must be treated as read-only.
type ComponentDefinitionLister interface {
	// List lists all ComponentDefinitions in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ComponentDefinition, err error)
	// ComponentDefinitions returns an object that can list and get ComponentDefinitions.
	ComponentDefinitions(namespace string) ComponentDefinitionNamespaceLister
	ComponentDefinitionListerExpansion
}

// componentDefinitionLister implements the ComponentDefinitionLister interface.
type componentDefinitionLister struct {
	indexer cache.Indexer
}

// NewComponentDefinitionLister returns a new ComponentDefinitionLister.
func NewComponentDefinitionLister(indexer cache.Indexer) ComponentDefinitionLister {
	return &componentDefinitionLister{indexer: indexer}
}

// List lists all ComponentDefinitions in the indexer.
func (s *componentDefinitionLister) List(selector labels.Selector) (ret []*v1alpha1.ComponentDefinition, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ComponentDefinition))
	})
	return ret, err
}

// ComponentDefinitions returns an object that can list and get ComponentDefinitions.
func (s *componentDefinitionLister) ComponentDefinitions(namespace string) ComponentDefinitionNamespaceLister {
	return componentDefinitionNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ComponentDefinitionNamespaceLister helps list and get ComponentDefinitions.
// All objects returned here must be treated as read-only.
type ComponentDefinitionNamespaceLister interface {
	// List lists all ComponentDefinitions in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ComponentDefinition, err error)
	// Get retrieves the ComponentDefinition from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ComponentDefinition, error)
	ComponentDefinitionNamespaceListerExpansion
}

// componentDefinitionNamespaceLister implements the ComponentDefinitionNamespaceLister
// interface.
type componentDefinitionNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ComponentDefinitions in the indexer for a given namespace.
func (s componentDefinitionNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ComponentDefinition, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ComponentDefinition))
	})
	return ret, err
}

// Get retrieves the ComponentDefinition from the indexer for a given namespace and name.
func (s componentDefinitionNamespaceLister) Get(name string) (*v1alpha1.ComponentDefinition, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("componentdefinition"), name)
	}
	return obj.(*v1alpha1.ComponentDefinition), nil
}
